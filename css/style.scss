@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap");

* {
  border: none;
  outline: none;
  // font-family: ;
  font-family: "Roboto", sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
  text-transform: capitalize;
  transition: all 0.2s linear;
  line-height: 1.5;
}
@mixin box-shadow {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
}

:root {
  --main-color: #e38528;
}

html {
  font-size: 62.5%;
  overflow-x: hidden;
  //这个属性，我从来没有直观得感受过，它的用处
  scroll-behavior: smooth;
}

body {
  padding-left: 30rem;
  background: #fcf2e8;
}

section {
  padding: 1rem 5%;
  min-height: 100vh;
}

.heading {
  font-size: 4rem;
  padding-bottom: 1rem;
  color: #111;
  text-transform: uppercase;

  span {
    color: var(--main-color);
    text-transform: uppercase;
  }
}

.btn {
  display: inline-block;
  margin-top: 1rem;
  padding: 0.8rem 3rem;
  background: var(--main-color);
  color: #fff;
  cursor: pointer;
  font-size: 1.7rem;

  &:hover {
    background: #111;
    letter-spacing: 0.2rem;
  }
}

header {
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  background-color: #222;
  display: flex;
  flex-flow: column;
  //一开始就flex了吗
  text-align: center;
  align-items: center;
  justify-content: space-between;
  padding: 8rem 2rem;
  width: 30rem;

  // right: calc(100vw-30rem);
  //这个居然也是失败了
  .logo {
    text-transform: uppercase;
    font-size: 3rem;
    color: white;
    font-weight: bolder;

    //全大写
    span {
      text-transform: uppercase;
      color: var(--main-color);
    }
  }

  .navbar {
    // display: flex;

    a {
      // flex: 1;
      display: block;
      font-size: 2rem;
      //这里到底怎么换行呀
      //?flex属性和display:block 会相互影响的
      //flex子元素会变化的，而block是不能变化的
      color: white;
      margin: 2rem 0;

      &:hover {
        letter-spacing: 0.2rem;
        color: var(--main-color);
      }
    }
  }

  .follow {
    // display: flex;

    a {
      // flex: 1;
      color: white;
      font-size: 2.5rem;
      // justify-content: space-between;
      //这样居然失效了
      margin: 0 0.7rem;

      &:hover {
        color: var(--main-color);
      }
    }
  }
}

//用flex布局，然后把主轴侧转，布局。
.home {
  //接下来很明显，用的是flex布局
  display: flex;
  align-items: center;
  //对哦，直接这样，侧轴居中就行了呀
  flex-wrap: wrap;
  gap: 1.5rem;

  .content {
    // margin: auto 0;
    flex: 1 1 40rem;

    .hi {
      font-size: 2rem;
      color: var(--main-color);
    }

    h3 {
      text-transform: uppercase;
      font-size: 4.5rem;
      color: #111;

      span {
        text-transform: uppercase;
        color: var(--main-color);
      }
    }

    .info {
      font-size: 2.5rem;
      color: #111;
      padding: 0.5rem 0;
    }

    .text {
      font-size: 1.7rem;
      color: #666;
      padding: 0.5rem 0;
    }
  }

  .image {
    // margin: auto 0;
    flex: 1 1 40rem;

    img {
      width: 100%;
    }
  }
}

.about {
  .row-1 {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    padding-bottom: 2rem;

    .image {
      // background-color: white;
      // padding: 3rem;
      flex: 1 1 25rem;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border: 1rem solid #fff;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
      }
    }

    .content {
      flex: 1 1 50rem;

      h3 {
        color: #333;
        font-size: 3.5rem;
      }

      p {
        color: #666;
        font-size: 1.7rem;
        padding: 0.5rem 0;
      }

      .box-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        padding: 0.5rem 0;

        .box {
          flex: 1 1 20rem;

          p {
            span {
              color: var(--main-color);
              // line-height: 2;
            }
          }
        }
      }
    }
  }

  .row-2 {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    align-items: center;
    //?原来是用这个属性呀
    .skills {
      flex: 1 1 40rem;

      .progress {
        padding: 1rem 0;

        h3 {
          display: flex;
          justify-content: space-between;
          padding: 0.7rem 0;
          font-size: 1.7rem;
          color: #111;
          font-weight: 400;
        }

        .bar {
          width: 100%;
          height: 1rem;
          //   background-color: #666;
          background: #ccc;
          overflow: hidden;
          border-radius: 50rem;

          // span{
          //     height: 1rem;
          //     width: ;
          //
          span {
            display: block;
            height: 1rem;
            border-radius: 50rem;
            background-color: var(--main-color);
          }
        }
      }

      & .progress:nth-child(1) {
        .bar {
          span {
            width: 95%;
          }
        }
      }

      & .progress:nth-child(2) {
        .bar {
          span {
            width: 80%;
          }
        }
      }

      & .progress:nth-child(3) {
        .bar {
          span {
            width: 75%;
          }
        }
      }

      & .progress:nth-child(4) {
        .bar {
          span {
            width: 85%;
          }
        }
      }
    }
    .box-container {
      // flex布局，对齐的问题是怎么解决的？
      flex: 1 1 40rem;
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
      .box {
        flex: 1 1 15rem;
        background-color: white;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        // height: 7rem;
        // width: 100%;
        //? 为啥这里没有设置大小
        //这里依旧是用里面的字撑大了
        h3 {
          font-size: 3rem;
          color: var(--main-color);
        }
        p {
          color: #666;
          font-size: 1.7rem;
          padding-top: 0.5rem;
        }
      }
    }
  }
}
.service {
  .box-container {
    display: flex;
    flex-wrap: wrap;
    // align-items: center;
    //这个是不需要的
    gap: 1.5rem;
    .box {
      flex: 1 1 30rem;
      text-align: center;
      background-color: white;
      padding: 2rem;
      @include box-shadow();
      border-radius: 0.5rem;
      i {
        height: 6rem;
        width: 6rem;
        line-height: 6rem;
        font-size: 2.5rem;
        background-color: var(--main-color);

        color: white;
        border-radius: 50%;
        // ? 外面没有边框咋回事
        //原来i 自己就是一个框，可以设置height和width
      }
      h3 {
        font-size: 2.2rem;
        color: #444;
        padding-top: 1rem;
      }

      p {
        color: #666;
        font-size: 1.7rem;
        padding-top: 0.5rem;
      }
    }
  }
}
.experience {
  .box-container {
    //?这里搞不定，这个文字实在是太长了
    //原来是我box，少打了一个.,应该是.box
    display: flex;
    flex-wrap: wrap;
    // gap: 1.5rem;
    .box {
      position: relative;
      flex: 1 1 33rem;
      border-left: 0.2rem solid var(--main-color);
      padding: 0 2rem 2rem;
      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: -1rem;
        height: 2rem;
        width: 2rem;
        border-radius: 50%;
        background-color: var(--main-color);
      }
      .content {
        background-color: white;
        padding: 1.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
        span {
          font-size: 1.7rem;
          color: white;
          background-color: var(--main-color);
          border-radius: 50rem;
          padding: 0.4rem 1rem;
        }
        h3 {
          font-size: 2.5rem;
          padding: 0.5rem 0;
          color: #111;
        }
        p {
          font-size: 1.5rem;
          color: #666;
        }
      }
    }
  }
}
.portfolio {
  .box-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    .box {
      height: 25rem;
      //有时候是单独设置一个高度
      flex: 1 1 30rem;
      position: relative;
      overflow: hidden;
      border: 1rem solid #fff;
      @include box-shadow();
      //   padding: 1rem;
      background-color: white;
      //用什么办法居中图片呢
      border-radius: 0.5rem;

      img {
        // display: none;
        width: 100%;
        height: 100%;
        //之前忘记设置高度了
        object-fit: cover;
        border-radius: 0.5rem;
        position: relative;
        // !这个relative是为了让z-index生效，而非是为了定位本身
        z-index: 1;
      }
      &:hover {
        img {
          height: 75%;
          width: 75%;
        }
      }
      h3 {
        position: absolute;
        bottom: 0.5rem;
        left: 1rem;
        font-size: 2.5rem;
        color: #333;
        text-transform: uppercase;
      }
      .icons {
        position: absolute;
        top: 1rem;
        right: 1rem;
        // display: flex;
        // flex-direction: column;
        // gap: 1.5rem;
        a {
          display: block;
          //原来如此，变成block以后，就自动换行了，变竖了
          width: 4rem;
          height: 4rem;
          border-radius: 0.5rem;
          background-color: #eee;
          color: #333;
          font-size: 1.7rem;
          line-height: 4rem;
          text-align: center;
          margin-bottom: 1rem;
          &:hover {
            background-color: var(--main-color);
            color: #fff;
          }
        }
      }
    }
  }
}
.contact {
  .icons-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    padding-bottom: 2rem;
    .icons {
      flex: 1 1 25rem;
      text-align: center;
      padding: 2rem;
      background-color: white;
      @include box-shadow();
      border-radius: 0.5rem;

      i {
        height: 5rem;
        width: 5rem;
        line-height: 5rem;
        font-size: 2rem;
        background-color: var(--main-color);
        color: white;
        // text-align: center;
        border-radius: 50%;
      }
      h3 {
        color: #111;
        font-size: 2rem;
        padding: 1rem 0 0.5rem;
      }
      p {
        color: #666;
        font-size: 1.7rem;
      }
    }
  }
  .row {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    // margin-top: 1rem;
    form {
      flex: 1 1 55rem;
      background-color: white;
      padding: 0 2rem;
      @include box-shadow();
      border-radius: 0.5rem;
      //   input {
      //     width: 100%;
      //     padding: 2rem;
      //     border-bottom: 0.1rem solid#111;
      //     //?这个为啥这么长呢
      //   }
      //   textarea {
      //     width: 100%;
      //     padding: 2rem;
      //   }
      .box,
      textarea {
        width: 100%;
        border-bottom: 0.1rem solid #333;
        color: #333;
        text-transform: none;
        font-size: 1.7rem;
        padding: 1rem 0;
        margin: 1rem 0;
        &:focus {
          border-color: var(--main-color);
        }
        &::placeholder {
          text-transform: capitalize;
          //placeholder,自定义站位文本
        }
        textarea {
          height: 20rem;
          resize: none;
        }
        .btn {
          margin-top: 0;
          margin-bottom: 1.5rem;
        }
      }
    }
    .map {
      flex: 1 1 25rem;
      border: 1rem solid #fff;
      @include box-shadow();
      border-radius: 0.5rem;
      width: 100%;
      //   background-color: white;
      //   padding: 1rem;
    }
  }
}
.footer {
  margin-top: 2rem;
  font-size: 2rem;
  padding: 2.5rem;
  text-align: center;
  color: #666;
  background: #fff;
}
.footer span {
  color: var(--main-color);
}
